{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "domainName": {
            "type": "string",
            "metadata": {
            "description": "Domain Name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
            "description": "Location for all resources."
            }
        },
        "domainServicesVnetName": {
            "type": "string",
            "defaultValue": "domain-services-vnet",
            "metadata": {
            "description": "Virtual Network Name"
            }
        },
        "domainServicesVnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
            "description": "Address Prefix"
            }
        },
        "domainServicesSubnetName": {
            "type": "string",
            "defaultValue": "domain-services-subnet",
            "metadata": {
            "description": "Virtual Network Name"
            }
        },
        "domainServicesSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
            "description": "Subnet prefix"
            }
        },
        "azureAdminUpn": {
            "type": "string",
            "metadata": {
                "description": "The UPN of the account that you're currently logged in with on the Azure Portal. This account should at least have the 'contributor' or 'owner' role on the subscription level for the deployment to succeed. The template will fail if you enter a user account that requires MFA."
            }
        },
        "azureAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the Azure admin UPN above."
            }
        },
        "DomainJoinAccountUPN": {
            "type": "string",
            "metadata": {
                "description": "User or service account UPN (<username>@<domain-to-join>.com) with sufficient privileges to domain join virtual machines. Additionally, please make sure the username is allowed (aka.ms/usernames) - Certain common usernames such as 'admin' are not allowed for this account. The template will fail if you enter a user account that requires MFA or an application that is secured by a certificate."
            }
        },
        "DomainJoinAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the domain join account UPN."
            }
        },
        "optionalNotificationEmail": {
            "type": "string",
            "metadata": {
                "description": "If desired, you can provide an email address to which we'll send a notification once your WVD deployment completes. DevOps will, by default, attempt to send an email to your Azure account, regardless of whether you provide a value here."
            },
            "defaultValue": "[parameters('azureAdminUpn')]"
        },
        "utcValue": {
            "type": "string",
            "metadata": {
                "description": "Please leave this value as '[utcNow()]', as this is used to generate unique names in the deployment. This is a requirement for resources like a keyvault or storage account."
            },
            "defaultValue": "[utcNow()]"
        }
    },
    "variables": {
         "_artifactsLocation": "https://raw.githubusercontent.com/samvdjagt/wvdquickstart/master",
        "AdminPasswordSecret": "adminPassword",
        "existingDomainUsername": "[first(split(parameters('DomainJoinAccountUPN'), '@'))]",
        "existingDomainName": "[split(parameters('DomainJoinAccountUPN'), '@')[1]]",
        "identityName": "WVDServicePrincipal",
        "location": "[resourcegroup().location]",
        "rgName": "[resourcegroup().name]",
        "keyvaultName": "[concat('keyvault', parameters('utcValue'))]",
        "assetsName": "[concat('assets', toLower(skip(parameters('utcValue'), 4)))]",
        "profilesName": "[concat('profils', toLower(skip(parameters('utcValue'), 4)))]",
        "autoAccountName": "[concat('automate', toLower(skip(parameters('utcValue'), 4)))]",
        "tenantId": "[subscription().tenantId]",
        "jobGuid0": "[guid(toLower(uniquestring(variables('identityName'), resourceGroup().id, parameters('utcValue'),'credentials')))]",
        "jobGuid": "[guid(toLower(uniquestring(variables('identityName'), resourceGroup().id, parameters('utcValue'),variables('autoAccountName'))))]",
        "jobGuid2": "[guid(toLower(uniquestring(variables('identityName'), subscription().id, parameters('utcValue'),'devOpsSetup')))]",
        "devOpsName": "[concat('WVDQuickStartOrg', skip(parameters('utcValue'), 9))]",   
        "devOpsProjectName": "[concat('WVDQuickStartProj', skip(parameters('utcValue'), 9))]",
        "targetGroup": "WVDTestUsers",
        "automationVariables": [
            {
                "name": "subscriptionid",
                "value": "[concat('\"',subscription().subscriptionId,'\"')]"
            },
            {
                "name": "accountName",
                "value": "[concat('\"',variables('autoAccountName'),'\"')]"
            },
            {
                "name": "AppName",
                "value": "[concat('\"',variables('identityName'),'\"')]"
            },
            {
                "name": "ResourceGroupName",
                "value": "[concat('\"',variables('rgName'),'\"')]"
            },
            {
                "name": "fileURI",
                "value": "[concat('\"',variables('_artifactsLocation'),'\"')]"
            },
            {
                "name": "orgName",
                "value": "[concat('\"',variables('devOpsName'),'\"')]"
            },
            {
                "name": "projectName",
                "value": "[concat('\"',variables('devOpsProjectName'),'\"')]"
            },
            {
                "name": "location",
                "value": "[concat('\"',variables('location'),'\"')]"
            },
            {
                "name": "adminUsername",
                "value": "[concat('\"',variables('existingDomainUsername'),'\"')]"
            },
                        {
                "name": "domainName",
                "value": "[concat('\"',variables('existingDomainName'),'\"')]"
            },
            {
                "name": "keyvaultName",
                "value": "[concat('\"',variables('keyvaultName'),'\"')]"
            },
            {
                "name": "assetsName",
                "value": "[concat('\"',variables('assetsName'),'\"')]"
            },
            {
                "name": "profilesName",
                "value": "[concat('\"',variables('profilesName'),'\"')]"
            },
            {
                "name": "DomainJoinAccountUPN",
                "value": "[concat('\"',parameters('DomainJoinAccountUPN'),'\"')]"
            },
            {
                "name": "existingVnetName",
                "value": "[concat('\"',parameters('domainServicesVnetName'),'\"')]"
            },
            {
                "name": "existingSubnetName",
                "value": "[concat('\"',parameters('domainServicesSubnetName'),'\"')]"
            },
            {
                "name": "targetGroup",
                "value": "[concat('\"', variables('targetGroup'),'\"')]"
            },
            {
                "name": "identityApproach",
                "value": "[concat('\"','Azure AD DS','\"')]"
            },
            {
                "name": "notificationEmail",
                "value": "[concat('\"',parameters('optionalNotificationEmail'),'\"')]"
            }
        ],   
        "domainServicesNSGName": "[concat(parameters('domainServicesSubnetName'), '-nsg')]",
        "nsgRefId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('domainServicesNSGName'))]",
        "vnetRefId": "[resourceId('Microsoft.Network/virtualNetworks/', parameters('domainServicesVnetName'))]",
        "subnetRefId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('domainServicesVnetName'), parameters('domainServicesSubnetName'))]",
        "PSRemotingSlicePIPAddresses": [
            "52.180.179.108",
            "52.180.177.87",
            "13.75.105.168",
            "52.175.18.134",
            "52.138.68.41",
            "52.138.65.157",
            "104.41.159.212",
            "104.45.138.161",
            "52.169.125.119",
            "52.169.218.0",
            "52.187.19.1",
            "52.187.120.237",
            "13.78.172.246",
            "52.161.110.169",
            "52.174.189.149",
            "40.68.160.142",
            "40.83.144.56",
            "13.64.151.161"
        ],
        "RDPIPAddresses": [
            "207.68.190.32/27",
            "13.106.78.32/27",
            "13.106.174.32/27",
            "13.106.4.96/27"
        ],
        "PSRemotingSliceTIPAddresses": [
            "52.180.183.67",
            "52.180.181.39",
            "52.175.28.111",
            "52.175.16.141",
            "52.138.70.93",
            "52.138.64.115",
            "40.80.146.22",
            "40.121.211.60",
            "52.138.143.173",
            "52.169.87.10",
            "13.76.171.84",
            "52.187.169.156",
            "13.78.174.255",
            "13.78.191.178",
            "40.68.163.143",
            "23.100.14.28",
            "13.64.188.43",
            "23.99.93.197"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2015-01-01-preview",
            "name": "[variables('autoAccountName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
            ],
            "tags": {},
            "properties": {
                "sku": {
                    "name": "Free"
                }
            },
            "resources": [
                {
                    "type": "credentials",
                    "apiVersion": "2015-01-01-preview",
                    "name": "AzureCredentials",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "userName": "[parameters('azureAdminUpn')]",
                        "password": "[parameters('azureAdminPassword')]"
                    }
                },
                {
                    "type": "credentials",
                    "apiVersion": "2015-01-01-preview",
                    "name": "domainJoinCredentials",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "userName": "[parameters('DomainJoinAccountUPN')]",
                        "password": "[parameters('DomainJoinAccountPassword')]"
                    }
                },
                {
                    "type": "runbooks",
                    "apiVersion": "2015-01-01-preview",
                    "name": "checkCredentialsRunbook",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/AzureCredentials')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/domainJoinCredentials')]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                            "uri": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/AADDScheckCredentials.ps1')]",
                            "version": "1.0.0.0"
                        }
                    } 
                },
                {
                    "type": "jobs",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('jobGuid0')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/checkCredentialsRunbook')]"
                    ],
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "checkCredentialsRunbook"
                        }
                    }
                },
                {
                    "type": "runbooks",
                    "apiVersion": "2015-01-01-preview",
                    "name": "ServicePrincipalRunbook",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/AzureCredentials')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/credentials/domainJoinCredentials')]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                            "uri": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/createServicePrincipal.ps1')]",
                            "version": "1.0.0.0"
                        }
                    }
                },
                {
                    "type": "jobs",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('jobGuid')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/ServicePrincipalRunbook')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/checkCredentialsRunbook')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('jobGuid0'))]"
                    ],
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "ServicePrincipalRunbook"
                        }
                    }
                },
                {
                    "type": "runbooks",
                    "apiVersion": "2015-01-01-preview",
                    "name": "devOpsSetupRunbook",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('microsoft.visualstudio/account/', variables('devOpsName'))]"
                    ],
                    "tags": {},
                    "properties": {
                        "runbookType": "PowerShell",
                        "logProgress": false,
                        "logVerbose": false,
                        "publishContentLink": {
                            "uri": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/AADDSdevopssetup.ps1')]",
                            "version": "1.0.0.0"
                        }
                    }
                },
                {
                    "type": "jobs",
                    "apiVersion": "2015-01-01-preview",
                    "name": "[variables('jobGuid2')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/',variables('jobGuid'))]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/runbooks/devOpsSetupRunbook')]",
                        "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('jobGuid0'))]",
                        "[concat('microsoft.visualstudio/account/', variables('devOpsName'))]",
                        "[concat('Microsoft.AAD/DomainServices/', parameters('domainName'))]"
                    ],
                    "tags": {
                        "key": "value"
                    },
                    "properties": {
                        "runbook": {
                            "name": "devOpsSetupRunbook"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2015-10-31",
            "name": "[concat(variables('autoAccountName'), '/', variables('automationVariables')[copyIndex()].name)]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('autoAccountName'))]"
            ],
            "tags": {},
            "properties": {
                "value": "[variables('automationVariables')[copyIndex()].value]"
            },
            "copy": {
                "name": "variableLoop",
                "count": "[length(variables('automationVariables'))]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyvaultName')]",
            "location": "[variables('location')]",
            "properties": {
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true,
                "enableSoftDelete": true,
                "lockForDeletion": false,
                "tenantId": "[variables('tenantId')]",
                "accessPolicies": [
                    {
                        "tenantId": "[variables('tenantId')]",
                        "objectId": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))).principalId]",
                        "permissions": {
                        "keys": [
                            "All"
                        ],
                        "secrets": [
                            "All"
                        ],
                        "certificates": [
                            "All"
                        ]
                        }
                    }
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "secretsObject": {
                    "value": {
                        "secrets": []
                    }
                }
            },
            "dependsOn": [
               "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('jobGuid0'))]"
            ],
            "resources": [
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2015-06-01",
            "name": "[concat(variables('keyvaultName'), '/', variables('AdminPasswordSecret'))]",
            "properties": {
                "name": "[variables('AdminPasswordSecret')]",
                "value": "[parameters('DomainJoinAccountPassword')]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2015-06-01",
            "name": "[concat(variables('keyvaultName'), '/azurePassword')]",
            "properties": {
                "name": "azurePassword",
                "value": "[parameters('azureAdminPassword')]"
            },
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultName'))]"
            ]
        },
        {
            "name": "[variables('devOpsName')]",
            "type": "microsoft.visualstudio/account",
            "location": "centralus",
            "apiVersion": "2014-04-01-preview",
            "properties": {
              "operationType": "Create",
              "accountName": "[variables('devOpsName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('jobGuid0'))]"
            ],
            "resources": []
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "name": "createDevopsPipeline",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('jobGuid2'))]"
            ],
            "kind": "AzureCLI",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]": {}
                }
            },
            "properties": {
                "forceUpdateTag": 1,
                "azCliVersion": "2.0.80",
                "arguments": "[concat(variables('devOpsName'), ' ', variables('devOpsProjectName'), ' ', parameters('azureAdminUpn'), ' ', variables('keyvaultName'))]",
                "primaryScriptUri": "[concat(variables('_artifactsLocation'),'/ARMRunbookScripts/createDevopsPipeline.sh')]",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('domainServicesNSGName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowPSRemotingSliceP",
                        "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "5986",
                        "sourceAddressPrefixes": "[variables('PSRemotingSlicePIPAddresses')]",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 301,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRDP",
                        "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "3389",
                        "sourceAddressPrefixes": "[variables('RDPIPAddresses')]",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 201,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSyncWithAzureAD",
                        "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "443",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 101,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowPSRemotingSliceT",
                        "properties": {
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "5986",
                        "sourceAddressPrefixes": "[variables('PSRemotingSliceTIPAddresses')]",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 302,
                        "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('domainServicesVnetName')]",
            "location": "[parameters('location')]",
            "dependsOn": ["[variables('domainServicesNSGName')]"],
            "properties": {
            "addressSpace": {
                "addressPrefixes": ["[parameters('domainServicesVnetAddressPrefix')]"]
            }
            },
            "resources": [
            {
                "apiVersion": "2018-10-01",
                "type": "subnets",
                "location": "[parameters('location')]",
                "name": "[parameters('domainServicesSubnetName')]",
                "dependsOn": ["[parameters('domainServicesVnetName')]"],
                "properties": {
                    "addressPrefix": "[parameters('domainServicesSubnetAddressPrefix')]",
                    "networkSecurityGroup": {
                        "id": "[variables('nsgRefId')]"
                    }
                }
            }
            ]
        },
        {
            "type": "Microsoft.AAD/DomainServices",
            "name": "[parameters('domainName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('domainServicesVnetName')]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('autoAccountName'), '/jobs/', variables('jobGuid0'))]"
            ],
            "properties": {
            "domainName": "[parameters('domainName')]",
            "vnetSiteID": "[variables('vnetRefId')]",
            "subnetId": "[variables('subnetRefId')]"
            }
        }
    ],
    "outputs": {}
  }