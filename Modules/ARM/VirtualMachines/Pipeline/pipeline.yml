name: $(moduleName)

variables:
- template: /Modules/ARM/.global/global.variables.yml
- name: moduleName
  value: VirtualMachines
- name: removeDeployment
  value: false
- name: enablePostDeployment
  value: false
  
# Module
- name: vmName
  value: SAZ0010
- name: diskEncryptionKeyVault
  value: sxx-wd-kv-weu-x-001

# Versioning - Use these only, if you would like to publish modules as Universal Packages (in ADO Artifacts)
- name: moduleVersion
  value: 1.0.1
- name: versionOption
  value: patch # major, minor, patch, or custom  

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - Modules/ARM/.global/*
    - Modules/VirtualMachines/WvdHostPools/*
    exclude:
    - /readme.md
    
stages:
- stage: Validation
  jobs:
  - template: /Modules/ARM/.global/PipelineTemplates/pipeline.jobs.validate.yml
    parameters:
      moduleName: '$(moduleName)'
      resourceGroupName: '$(resourceGroupName)'
      modulePath: '$(modulesPath)/$(moduleName)'
      parameterFilePaths:
      - $(modulePath)/Parameters/parameters.json
      
- stage: Deployment
  jobs:
  - template: /Modules/ARM/.global/PipelineTemplates/pipeline.jobs.deploy.yml
    parameters:
      moduleName: '$(moduleName)'
      resourceGroupName: '$(resourceGroupName)'
      modulePath: '$(modulesPath)/$(moduleName)'
      parameterFilePaths:
      - $(modulePath)/Parameters/parameters.json

- stage: PostDeployment
  condition: and(succeeded(), eq( variables['enablePostDeploymentl'], 'true'))
  jobs:
  - template: pipeline.jobs.post.yml

- stage: Publishing
  jobs:
  - template: /Modules/ARM/.global/PipelineTemplates/pipeline.jobs.publish.yml
    parameters:
      moduleName: ${{lower( variables.moduleName )}}
      versionOption: $(versionOption)
      moduleVersion: $(moduleVersion)

- stage: Removal
  dependsOn: Deployment
  condition: and(succeededOrFailed(), eq( variables['removeDeployment'], 'true'))   
  jobs:
  - template: /Modules/ARM/.global/PipelineTemplates/pipeline.jobs.remove.yml