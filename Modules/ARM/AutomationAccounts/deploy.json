{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of the Automation Account"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Free",
                "Basic"
            ],
            "metadata": {
                "description": "Optional. SKU name of the account"
            }
        },
        "runbooks": {
            "type": "array",
            "minLength": 0,
            "metadata": {
                "description": "Optional. List of runbooks to be created in the automation account"
            },
            "defaultValue": [
            ]
        },
        "schedules": {
            "type": "array",
            "minLength": 0,
            "metadata": {
                "description": "Optional. List of schedules to be created in the automation account"
            },
            "defaultValue": [
            ]
        },
        "jobSchedules": {
            "type": "array",
            "minLength": 0,
            "metadata": {
                "description": "Optional. List of jobSchedules to be created in the automation account"
            },
            "defaultValue": [
            ]
        },
        "diagnosticLogsRetentionInDays": {
            "type": "int",
            "defaultValue": 365,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
            }
        },
        "diagnosticStorageAccountId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource identifier of the Diagnostic Storage Account."
            }
        },
        "workspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource identifier of Log Analytics."
            }
        },
        "eventHubAuthorizationRuleId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
            }
        },
        "eventHubName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
            }
        },
        "lockForDeletion": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Optional. Switch to lock Automation Account from deletion."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Tags of the Automation Account resource."
            }
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Optional. Time used as a basis for e.g. the schedule start date"
            }
        },
        "cuaId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
            }
        }
    },
    "variables": {
        "diagnosticsMetrics": [
            {
                "category": "AllMetrics",
                "timeGrain": null,
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            }
        ],
        "diagnosticsLogs": [
            {
                "category": "JobLogs",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            },
            {
                "category": "JobStreams",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            },
            {
                "category": "DscNodeStatus",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            }
        ],
        "dummyJobSchedule": {
            "jobScheduleName": "dummyValue"
        },
        "dummySchedule": {
            "scheduleName": "dummyValue"
        },
        "dummyRunbooks": {
            "runbookName": "dummyValue"
        },
        "jobSchedules": "[if(greater(length(parameters('jobSchedules')),0),parameters('jobSchedules'), array(variables('dummyJobSchedule')))]",
        "schedules": "[if(greater(length(parameters('schedules')),0),parameters('schedules'), array(variables('dummySchedule')))]",
        "runbooks": "[if(greater(length(parameters('runbooks')),0),parameters('runbooks'), array(variables('dummyRunbooks')))]"
    },
    "resources": [
        {
            "condition": "[not(empty(parameters('cuaId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-02-01",
            "name": "[concat('pid-', parameters('cuaId'))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2015-10-31",
            "name": "[parameters('automationAccountName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "[parameters('skuName')]"
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Automation/automationAccounts/providers/locks",
                    "apiVersion": "2016-09-01",
                    "condition": "[parameters('lockForDeletion')]",
                    "name": "[concat(parameters('automationAccountName'),  '/Microsoft.Authorization/automationAccountDoNotDelete')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "comments": "Resource lock on Automation Account",
                    "properties": {
                        "level": "CannotDelete"
                    }
                },
                {
                    "type": "Microsoft.Automation/automationAccounts/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat(parameters('automationAccountName'), '/Microsoft.Insights/service')]",
                    "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))),not(empty(parameters('eventHubAuthorizationRuleId'))),not(empty(parameters('eventHubName'))))]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
                    ],
                    "properties": {
                        "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
                        "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
                        "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
                        "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
                        "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsMetrics'))]",
                        "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsLogs'))]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "condition": "[greater(length(parameters('runbooks')),0)]",
            "copy": {
                "name": "runbookCopy",
                "count": "[length(parameters('runbooks'))]"
            },
            "name": "[concat(parameters('automationAccountName'), '/', variables('runbooks')[copyIndex()].runbookName)]",
            "apiVersion": "2018-06-30",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "properties": {
                "runbookType": "[parameters('runbooks')[copyIndex()].runbookType]",
                "publishContentLink": {
                    "uri": "[concat(parameters('runbooks')[copyIndex()].runbookScriptUri, parameters('runbooks')[copyIndex()].runbookScriptLocationSasToken)]",
                    "version": "[parameters('runbooks')[copyIndex()].version]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "condition": "[greater(length(parameters('schedules')),0)]",
            "name": "[concat(parameters('automationAccountName'), '/', variables('schedules')[copyIndex()].scheduleName)]",
            "copy": {
                "name": "schedulesCopy",
                "count": "[length(variables('schedules'))]"
            },
            "apiVersion": "2015-10-31",
            "properties": {
                "startTime": "[if(empty(parameters('schedules')[copyIndex()].startTime), dateTimeAdd(parameters('baseTime'), 'PT10M'), parameters('schedules')[copyIndex()].startTime)]",
                "frequency": "[parameters('schedules')[copyIndex()].frequency]",
                "expiryTime": "[if(empty(parameters('schedules')[copyIndex()].expiryTime), json('null'), parameters('schedules')[copyIndex()].expiryTime)]",
                "interval": "[if(equals(0 , parameters('schedules')[copyIndex()].interval), json('null'), parameters('schedules')[copyIndex()].interval)]",
                "timeZone": "[if(empty(parameters('schedules')[copyIndex()].timeZone), json('null'), parameters('schedules')[copyIndex()].timeZone)]",
                "advancedSchedule": "[if(empty(parameters('schedules')[copyIndex()].advancedSchedule), json('null'), parameters('schedules')[copyIndex()].advancedSchedule)]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "condition": "[greater(length(parameters('jobSchedules')),0)]",
            "name": "[concat(parameters('automationAccountName'), '/', guid(variables('jobSchedules')[copyIndex()].jobScheduleName))]",
            "copy": {
                "name": "jobSchedulesCopy",
                "count": "[length(variables('jobSchedules'))]"
            },
            "apiVersion": "2015-10-31",
            "properties": {
                "schedule": {
                    "name": "[parameters('jobSchedules')[copyIndex()].scheduleName]"
                },
                "runbook": {
                    "name": "[parameters('jobSchedules')[copyIndex()].runbookName]"
                },
                "runOn": "[if(empty(parameters('jobSchedules')[copyIndex()].runOn), json('null'), parameters('jobSchedules')[copyIndex()].runOn)]",
                "parameters": "[if(empty(parameters('jobSchedules')[copyIndex()].parameters), json('null'), parameters('jobSchedules')[copyIndex()].parameters)]"
            },
            "dependsOn": [
                "runbookCopy",
                "schedulesCopy"
            ]
        }
    ],
    "functions": [
    ],
    "outputs": {
        "automationAccountResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
            "metadata": {
                "description": "The Resource Id of the Automation Account."
            }
        },
        "automationAccountResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The Resource Group the Automation Account was deployed to."
            }
        },
        "automationAccountName": {
            "type": "string",
            "value": "[parameters('automationAccountName')]",
            "metadata": {
                "description": "The Name of the Automation Account."
            }
        },
        "dummyObject": {
            "type": "array",
            "value": "[variables('jobSchedules')]",
            "metadata": {
                "description": "The Name of the Automation Account."
            }
        },
        "dummyString": {
            "type": "array",
            "value": "[variables('schedules')]",
            "metadata": {
                "description": "The Name of the Automation Account."
            }
        }
    }
}